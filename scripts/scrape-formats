#!/usr/bin/python

################################################################################
# scrape-formats
# Get the banlists for each format and store it in a set of files
################################################################################

import codecs
import os.path
import re
import requests
import sys

from bs4 import BeautifulSoup
from xml.dom import minidom
from xml.dom.minidom import Document

FORMAT_PATH = sys.argv[1]

WIKI_ROOT='http://yugioh.wikia.com/wiki/'
LIMITED_CHART_URI = WIKI_ROOT + 'Historic_Forbidden/Limited_Chart'
ILLEGAL_URI = WIKI_ROOT + 'Illegal'

class Banlist:
    def __init__(self, date, forbidden, limited, semilimited):
        self.date = date
        self.forbidden = forbidden
        self.limited = limited
        self.semilimited = semilimited

def read_banlist():
    # find the ban list headers
    r = requests.get(LIMITED_CHART_URI)
    data = r.text
    soup = BeautifulSoup(data)

    formats = []
    cards = []
    contents = soup.find_all("th")
    for th in contents:
        if th.has_attr('title') and th.has_attr('scope'):
            formats.append(th['title'])
        elif not th.has_attr('style') and \
            th.has_attr('scope') and th['scope'] == 'row':
                name = th.text.strip()
                name = re.sub(r"\(.*\)","",name)
                cards.append(name)

    # the headers are present twice on the page
    formats = formats[:len(formats)/2]

    # find out all the ban info:
    format_count = len(formats)
    counter = 0
    index = 0

    banlist = {}

    tds = soup.find_all("td")
    for td in tds:
        if td.has_attr('title') and td.has_attr('style'):
            if counter == format_count:
                # we move on to the next card
                counter = 0
                index = index + 1
            date = formats[counter]
            limit = td['title']
            card = cards[index]

            if date not in banlist:
                banlist[date] = Banlist(date, [], [], [])
            if limit == 'Semi-limited':
                banlist[date].semilimited.append(card)
            elif limit == 'Limited':
                banlist[date].limited.append(card)
            elif limit == 'Forbidden':
                banlist[date].forbidden.append(card)
            counter = counter + 1
    return banlist

def write_banlist(banlist):
    # write out to files
    for k in banlist:
        b = banlist[k]
        filename = os.path.join(FORMAT_PATH, b.date.replace(' ','_'))
        cardout = codecs.open(filename,'w','utf-8')
        # write out the banlist in XML format
        doc = Document()
        root = doc.createElement('banlist')
        root.setAttribute('date', b.date)
        doc.appendChild(root)

        forbidden = doc.createElement('forbidden')
        root.appendChild(forbidden)
        for f in b.forbidden:
            card = doc.createElement('card')
            forbidden.appendChild(card)
            text = doc.createTextNode(f.strip())
            card.appendChild(text)

        limited = doc.createElement('limited')
        root.appendChild(limited)
        for l in b.limited:
            card = doc.createElement('card')
            limited.appendChild(card)
            text = doc.createTextNode(l.strip())
            card.appendChild(text)

        semi = doc.createElement('semi-limited')
        root.appendChild(semi)
        for s in b.semilimited:
            card = doc.createElement('card')
            semi.appendChild(card)
            text = doc.createTextNode(s.strip())
            card.appendChild(text)

        doc.writexml(codecs.open(filename,'w','utf-8'),
                indent="",
                addindent="    ",
                newl='\n')
        doc.unlink()

def read_illegals():
    # get all the illegal card names
    r = requests.get(ILLEGAL_URI)
    data = r.text
    soup = BeautifulSoup(data)

    trs = soup.find_all("tr")
    illegals = []
    for tr in trs:
        if tr.has_attr('class'):
            tds = tr.find_all("td")
            for td in tds:
                name = td.text.strip()
                name = re.sub(r"\(.*\)","",name)
                illegals.append(name)
                break

    illegals = list(set(illegals))
    illegals.sort()
    return illegals

def write_illegals(illegals):
    filename = os.path.join(FORMAT_PATH, 'Illegal')
    doc = Document()
    root = doc.createElement('banlist')
    root.setAttribute('date', 'Illegal')
    doc.appendChild(root)

    illegal = doc.createElement('illegal')
    root.appendChild(illegal)
    for i in illegals:
        card = doc.createElement('card')
        illegal.appendChild(card)
        text = doc.createTextNode(i.strip())
        card.appendChild(text)

    doc.writexml(codecs.open(filename,'w','utf-8'),
            indent="",
            addindent="    ",
            newl='\n')
    doc.unlink()

banlist = read_banlist()
write_banlist(banlist)
illegals = read_illegals()
write_illegals(illegals)
