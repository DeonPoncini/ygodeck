#!/usr/bin/python

################################################################################
# load-db
# fill the database contents with the scraped content
################################################################################

import codecs
import os
import sqlite3
import sys

from xml.dom import minidom

PROJECT_ROOT = os.environ['PROJECT_ROOT']

# check the environment is set
if not PROJECT_ROOT:
    print "Environment not set, please source scripts/open-project.sh"
    sys.exit(-1)

if len(sys.argv) != 4:
    print "Usage is " + sys.argv[0] + " <db> <schema script> <data>"

DB_PATH = sys.argv[1]
EXECUTE_PATH = sys.argv[2]
DATA_PATH = sys.argv[3]

SCHEMA_PATH  = os.path.join(DATA_PATH, "db", "schema.sql")
FORMAT_PATH = os.path.join(DATA_PATH, "format")
CARD_PATH = os.path.join(DATA_PATH, "card")

# load up the schema
cmd = EXECUTE_PATH + ' ' + DB_PATH + ' ' + SCHEMA_PATH
os.system(cmd)

# load the values into the database
db = sqlite3.connect(DB_PATH)
db.text_factory = str
c = db.cursor()

# read up every format and write into the database
for filename in os.listdir(FORMAT_PATH):
    formatDom = minidom.parse(os.path.join(FORMAT_PATH, filename))
    banlist = formatDom.getElementsByTagName('banlist')

    all_formats = []
    for b in banlist:
        date = b.getAttribute('date')
        illegal = b.getElementsByTagName('illegal')
        forbidden = b.getElementsByTagName('forbidden')
        limited = b.getElementsByTagName('limited')
        semilimited = b.getElementsByTagName('semi-limited')

        for f in illegal:
            cards = f.getElementsByTagName('card')
            for a in cards:
                text = a.firstChild.nodeValue
                items = [None, date]
                items.append(text.rstrip())
                items.append('Illegal')
                all_formats.append(items)

        for f in forbidden:
            cards = f.getElementsByTagName('card')
            for a in cards:
                text = a.firstChild.nodeValue
                items = [None, date]
                items.append(text.rstrip())
                items.append('Forbidden')
                all_formats.append(items)

        for f in limited:
            cards = f.getElementsByTagName('card')
            for a in cards:
                text = a.firstChild.nodeValue
                items = [None, date]
                items.append(text.rstrip())
                items.append('Limited')
                all_formats.append(items)

        for f in semilimited:
            cards = f.getElementsByTagName('card')
            for a in cards:
                text = a.firstChild.nodeValue
                items = [None, date]
                items.append(text.rstrip())
                items.append('Semi-limited')
                all_formats.append(items)

    c.executemany('INSERT INTO formats VALUES (?,?,?,?)', all_formats)

# read up every card and write into the database
for filename in os.listdir(CARD_PATH):
    # skip hidden files
    if filename.startswith('.'):
        continue

    formatDom = minidom.parse(os.path.join(CARD_PATH, filename))
    cards = formatDom.getElementsByTagName('card')
    card = [None]

    for k in cards:
        tag = k.getElementsByTagName('name')
        text = tag[0].firstChild.nodeValue
        card.append(text)

        tag = k.getElementsByTagName('cardType')
        text = tag[0].firstChild.nodeValue
        card.append(text)

        tag = k.getElementsByTagName('attribute')
        text = tag[0].firstChild.nodeValue
        card.append(text)

        tag = k.getElementsByTagName('monsterType')
        text = tag[0].firstChild.nodeValue
        card.append(text)

        tag = k.getElementsByTagName('monsterAbility')
        text = tag[0].firstChild.nodeValue
        card.append(text)

        tag = k.getElementsByTagName('type')
        text = tag[0].firstChild.nodeValue
        card.append(text)

        tag = k.getElementsByTagName('level')
        text = tag[0].firstChild.nodeValue
        card.append(text)

        tag = k.getElementsByTagName('attack')
        text = tag[0].firstChild.nodeValue
        card.append(text)

        tag = k.getElementsByTagName('defense')
        text = tag[0].firstChild.nodeValue
        card.append(text)

        tag = k.getElementsByTagName('lpendulum')
        text = tag[0].firstChild.nodeValue
        card.append(text)

        tag = k.getElementsByTagName('rpendulum')
        text = tag[0].firstChild.nodeValue
        card.append(text)

        tag = k.getElementsByTagName('spellType')
        text = tag[0].firstChild.nodeValue
        card.append(text)

        tag = k.getElementsByTagName('trapType')
        text = tag[0].firstChild.nodeValue
        card.append(text)

        tag = k.getElementsByTagName('text')
        text = tag[0].firstChild.nodeValue
        card.append(text)

    c.execute('INSERT INTO card VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)', card)

db.commit()
c.close()
db.close()
