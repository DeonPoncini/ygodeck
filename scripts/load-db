#!/usr/bin/python

################################################################################
# load-db
# fill the database contents with the scraped content
################################################################################

import codecs
import os
import sqlite3
import sys

from xml.dom import minidom

PROJECT_ROOT = os.environ['PROJECT_ROOT']

# check the environment is set
if not PROJECT_ROOT:
    print "Environment not set, please source scripts/open-project.sh"
    sys.exit(-1)

if len(sys.argv) != 2:
    print "Usage is " + sys.argv[0] + " <output>"

DB_PATH = sys.argv[1]

REPO_PATH = os.path.join(PROJECT_ROOT, 'ygodeck')
SCHEMA_PATH = os.path.join(REPO_PATH, 'db', 'schema.sql')
FORMAT_PATH = os.path.join(REPO_PATH, 'format')
CARD_PATH = os.path.join(REPO_PATH, 'card')
EXECUTE_PATH = os.path.join(PROJECT_ROOT, 'mindbw', 'scripts', 'sqlite3-execute')

# load up the schema
cmd = EXECUTE_PATH + ' ' + DB_PATH + ' ' + SCHEMA_PATH
os.system(cmd)

# load the values into the database
db = sqlite3.connect(DB_PATH)
db.text_factory = str
c = db.cursor()

# read up every format and write into the database
for filename in os.listdir(FORMAT_PATH):
    formatDom = minidom.parse(os.path.join(FORMAT_PATH, filename))
    banlist = formatDom.getElementsByTagName('banlist')

    all_formats = []
    for b in banlist:
        date = b.getAttribute('date')
        illegal = b.getElementsByTagName('illegal')
        forbidden = b.getElementsByTagName('forbidden')
        limited = b.getElementsByTagName('limited')
        semilimited = b.getElementsByTagName('semi-limited')

        for f in illegal:
            cards = f.getElementsByTagName('card')
            for a in cards:
                text = a.firstChild.nodeValue
                items = [None, date]
                items.append(text.rstrip())
                items.append('Illegal')
                all_formats.append(items)

        for f in forbidden:
            cards = f.getElementsByTagName('card')
            for a in cards:
                text = a.firstChild.nodeValue
                items = [None, date]
                items.append(text.rstrip())
                items.append('Forbidden')
                all_formats.append(items)

        for f in limited:
            cards = f.getElementsByTagName('card')
            for a in cards:
                text = a.firstChild.nodeValue
                items = [None, date]
                items.append(text.rstrip())
                items.append('Limited')
                all_formats.append(items)

        for f in semilimited:
            cards = f.getElementsByTagName('card')
            for a in cards:
                text = a.firstChild.nodeValue
                items = [None, date]
                items.append(text.rstrip())
                items.append('Semi-limited')
                all_formats.append(items)

    c.executemany('INSERT INTO formats VALUES (?,?,?,?)', all_formats)

# read up every card and write into the database
for filename in os.listdir(CARD_PATH):
    ff = codecs.open(os.path.join(CARD_PATH, filename), 'r', 'utf-8')
    content = ff.readlines()
    card = [None]
    for line in content:
        card.append(line.rstrip())
    # check for multi line text descriptions
    if len(card) > 15:
        card[14:] = [''.join(card[14:])]
    if len(card) != 15:
        print "Error in file: " + filename
        continue
    c.execute('INSERT INTO card VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)', card)

db.commit()
c.close()
db.close()
